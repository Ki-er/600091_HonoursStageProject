@using FeedbackToolDissertation.Data
@using FeedbackToolDissertation.Data.FeedbackToolDissertation
@inject ModuleService ModuleService
@page "/Grading"

<h3>Grading</h3>


<InputFile OnChange="@LoadFiles" />

  <label for="fname">Student Number:</label>
  <input type="text" id="snumber" name="snumber"><br><br>



@code {
    private void LoadFiles(InputFileChangeEventArgs e)
    {

    }
}



@code {
  // AuthenticationState is available as a CascadingParameter
  [CascadingParameter]

   Task < AuthenticationState > authenticationStateTask {get; set; }

  List <Modules> moduleList;

  protected
  override
  async Task OnInitializedAsync()
  {

    // Get the current user
    var user = (await authenticationStateTask).User;
    moduleList = await ModuleService.GetModulesAsync(user.Identity.Name);
  }

}

